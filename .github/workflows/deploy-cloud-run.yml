name: Deploy to Google Cloud Run

on:
  push:
    branches: [ main ]
  workflow_dispatch:
  
env:
  PROJECT_ID: py2nb-production
  GAR_LOCATION: europe-west1
  REGION: europe-west1
  BACKEND_SERVICE: future-vision-api
  FRONTEND_SERVICE: future-vision-ui
  
jobs:
  deploy-backend:
    name: Deploy Backend API
    runs-on: ubuntu-latest
    outputs:
      backend_url: ${{ steps.deploy.outputs.url }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
          
      - name: Configure Docker for Google Cloud
        run: gcloud auth configure-docker ${{ env.GAR_LOCATION }}-docker.pkg.dev
        
      - name: Build backend Docker image
        run: |
          docker build -f backend/Dockerfile \
            -t ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/cloud-run-source-deploy/${{ env.BACKEND_SERVICE }}:${{ github.sha }} \
            backend/
            
      - name: Push backend image to Google Artifact Registry
        run: |
          docker push ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/cloud-run-source-deploy/${{ env.BACKEND_SERVICE }}:${{ github.sha }}
          
      - name: Deploy backend to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ env.BACKEND_SERVICE }}
          region: ${{ env.REGION }}
          image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/cloud-run-source-deploy/${{ env.BACKEND_SERVICE }}:${{ github.sha }}
          env_vars: |
            GOOGLE_CLOUD_PROJECT=${{ env.PROJECT_ID }}
            GCS_BUCKET=cityscapes_data2
            MODEL_BASE_PATH=gs://cityscapes_data2/models/tf_2_15_compatible/
            UNET_MINI_PATH=gs://cityscapes_data2/models/tf_2_15_compatible/unet_mini_tf_2_15_final_20250805_132446.keras
            VGG16_UNET_PATH=gs://cityscapes_data2/models/tf_2_15_compatible/vgg16_unet_tf_2_15_final_20250805_142633.keras
          flags: |
            --memory=4Gi
            --cpu=2
            --concurrency=10
            --timeout=300
            --max-instances=10
            --allow-unauthenticated
            --port=8000
            
  deploy-frontend:
    name: Deploy Frontend UI
    runs-on: ubuntu-latest
    needs: deploy-backend
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
          
      - name: Configure Docker for Google Cloud
        run: gcloud auth configure-docker ${{ env.GAR_LOCATION }}-docker.pkg.dev
        
      - name: Build frontend Docker image
        run: |
          docker build -f frontend/Dockerfile \
            -t ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/cloud-run-source-deploy/${{ env.FRONTEND_SERVICE }}:${{ github.sha }} \
            frontend/
            
      - name: Push frontend image to Google Artifact Registry
        run: |
          docker push ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/cloud-run-source-deploy/${{ env.FRONTEND_SERVICE }}:${{ github.sha }}
          
      - name: Deploy frontend to Cloud Run
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ env.FRONTEND_SERVICE }}
          region: ${{ env.REGION }}
          image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/cloud-run-source-deploy/${{ env.FRONTEND_SERVICE }}:${{ github.sha }}
          env_vars: |
            BACKEND_URL=${{ needs.deploy-backend.outputs.backend_url }}
          flags: |
            --memory=512Mi
            --cpu=1
            --concurrency=100
            --timeout=60
            --max-instances=10
            --allow-unauthenticated
            --port=80
            
  notify-deployment:
    name: Notify Deployment Status
    runs-on: ubuntu-latest
    needs: [deploy-backend, deploy-frontend]
    if: always()
    
    steps:
      - name: Deployment Summary
        run: |
          echo "## 🚀 Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Backend API" >> $GITHUB_STEP_SUMMARY
          echo "- **Service**: ${{ env.BACKEND_SERVICE }}" >> $GITHUB_STEP_SUMMARY
          echo "- **URL**: ${{ needs.deploy-backend.outputs.backend_url }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Status**: ${{ needs.deploy-backend.result }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Frontend UI" >> $GITHUB_STEP_SUMMARY
          echo "- **Service**: ${{ env.FRONTEND_SERVICE }}" >> $GITHUB_STEP_SUMMARY  
          echo "- **Status**: ${{ needs.deploy-frontend.result }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Google Cloud Project" >> $GITHUB_STEP_SUMMARY
          echo "- **Project**: ${{ env.PROJECT_ID }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Region**: ${{ env.REGION }}" >> $GITHUB_STEP_SUMMARY
          echo "- **GCS Bucket**: cityscapes_data2" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [ "${{ needs.deploy-backend.result }}" == "success" ] && [ "${{ needs.deploy-frontend.result }}" == "success" ]; then
            echo "✅ **Deployment completed successfully!**" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Deployment failed. Check logs for details.**" >> $GITHUB_STEP_SUMMARY
          fi